{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/Rustam_Mukhamedov/Downloads/kittynews_frontend/app/javascript/packs/posts-show/components/List/List.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport userImg from './assets/hunter.svg';\nimport upvoterImg from './assets/upvoter.svg';\nimport makerImg from './assets/maker.svg';\nimport commenterImg from './assets/commenter.svg';\n\nvar List = function List(_ref) {\n  var user = _ref.user,\n      commenters = _ref.commenters;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      list = _useState2[0],\n      setList = _useState2[1];\n\n  useEffect(function () {\n    if (commenters) {\n      setList([_objectSpread(_objectSpread({}, user), {}, {\n        icon: userImg\n      })].concat(_toConsumableArray(commenters.map(function (item) {\n        return _objectSpread(_objectSpread({}, item), {}, {\n          icon: makerImg\n        });\n      })), _toConsumableArray(commenters.map(function (item) {\n        return _objectSpread(_objectSpread({}, item), {}, {\n          icon: commenterImg\n        });\n      })), _toConsumableArray(commenters.map(function (item) {\n        return _objectSpread(_objectSpread({}, item), {}, {\n          icon: upvoterImg\n        });\n      }))));\n    }\n  }, [user, commenters]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, list.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"avatarContainer\",\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"avatars\",\n      src: item.image,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: item.icon,\n      className: \"avatarIcon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }));\n  }));\n};\n\nList.propTypes = {\n  user: PropTypes.shape({\n    image: PropTypes.string\n  }),\n  commenters: PropTypes.arrayOf(PropTypes.shape({\n    image: PropTypes.string\n  }))\n};\nexport default List;","map":{"version":3,"sources":["/Users/Rustam_Mukhamedov/Downloads/kittynews_frontend/app/javascript/packs/posts-show/components/List/List.jsx"],"names":["React","useState","useEffect","PropTypes","userImg","upvoterImg","makerImg","commenterImg","List","user","commenters","list","setList","icon","map","item","index","image","propTypes","shape","string","arrayOf"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAA0B;AAAA,MAAvBC,IAAuB,QAAvBA,IAAuB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,kBACbT,QAAQ,CAAC,EAAD,CADK;AAAA;AAAA,MAC9BU,IAD8B;AAAA,MACxBC,OADwB;;AAGrCV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAGQ,UAAH,EAAe;AACbE,MAAAA,OAAO,kCACDH,IADC;AACKI,QAAAA,IAAI,EAAET;AADX,oCAEFM,UAAU,CAACI,GAAX,CAAe,UAAAC,IAAI;AAAA,+CAASA,IAAT;AAAeF,UAAAA,IAAI,EAAEP;AAArB;AAAA,OAAnB,CAFE,sBAGFI,UAAU,CAACI,GAAX,CAAe,UAAAC,IAAI;AAAA,+CAASA,IAAT;AAAeF,UAAAA,IAAI,EAAEN;AAArB;AAAA,OAAnB,CAHE,sBAIFG,UAAU,CAACI,GAAX,CAAe,UAAAC,IAAI;AAAA,+CAASA,IAAT;AAAeF,UAAAA,IAAI,EAAER;AAArB;AAAA,OAAnB,CAJE,GAAP;AAMD;AACF,GATQ,EASN,CAACI,IAAD,EAAOC,UAAP,CATM,CAAT;AAWE,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,CAACG,GAAL,CAAS,UAACC,IAAD,EAAOC,KAAP;AAAA,wBACR;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,GAAG,EAAEA,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,GAAG,EAAED,IAAI,CAACE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,GAAG,EAAEF,IAAI,CAACF,IAAf;AAAqB,MAAA,SAAS,EAAC,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADQ;AAAA,GAAT,CADH,CADJ;AAUH,CAxBD;;AA0BAL,IAAI,CAACU,SAAL,GAAiB;AACfT,EAAAA,IAAI,EAAEN,SAAS,CAACgB,KAAV,CAAgB;AACpBF,IAAAA,KAAK,EAAEd,SAAS,CAACiB;AADG,GAAhB,CADS;AAIfV,EAAAA,UAAU,EAAEP,SAAS,CAACkB,OAAV,CAAkBlB,SAAS,CAACgB,KAAV,CAAgB;AAC5CF,IAAAA,KAAK,EAAEd,SAAS,CAACiB;AAD2B,GAAhB,CAAlB;AAJG,CAAjB;AASA,eAAeZ,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport userImg from './assets/hunter.svg';\nimport upvoterImg from './assets/upvoter.svg';\nimport makerImg from './assets/maker.svg';\nimport commenterImg from './assets/commenter.svg';\n\n\nconst List = ({ user, commenters }) => {\n  const [list, setList] = useState([]);\n\n  useEffect(() => {\n    if(commenters) {\n      setList([\n        {...user, icon: userImg}, \n        ...commenters.map(item => ({...item, icon: makerImg })), // Moked makers\n        ...commenters.map(item => ({...item, icon: commenterImg })),\n        ...commenters.map(item => ({...item, icon: upvoterImg })) // Moked upvoters\n      ])\n    }\n  }, [user, commenters]);\n\n    return (\n        <div className=\"list\">\n          {list.map((item, index) => \n            <div className=\"avatarContainer\" key={index}>\n              <img className=\"avatars\" src={item.image} />\n              <img src={item.icon} className=\"avatarIcon\" />\n            </div>\n          )}\n        </div>\n    )\n}\n\nList.propTypes = {\n  user: PropTypes.shape({\n    image: PropTypes.string,\n  }),\n  commenters: PropTypes.arrayOf(PropTypes.shape({\n    image: PropTypes.string\n  })),\n}\n\nexport default List;"]},"metadata":{},"sourceType":"module"}