{"ast":null,"code":"var _jsxFileName = \"/Users/Rustam_Mukhamedov/Downloads/kittynews_frontend/app/javascript/packs/posts-index/posts-index.jsx\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport * as React from 'react';\nimport { useQuery, useMutation } from 'react-apollo';\nimport renderComponent from '../utils/renderComponent';\nimport { getAllPostsQuery } from './queries/getAllPosts';\nimport { voteForPostMutation } from './mutations/voteForPost';\n\nfunction PostsIndex() {\n  var _this = this;\n\n  var _useQuery = useQuery(getAllPostsQuery),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var _useMutation = useMutation(voteForPostMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      vote = _useMutation2[0];\n\n  if (loading) return 'Loading...';\n  if (error) return \"Error! \".concat(error.message);\n\n  var handleUpvote = function handleUpvote(postId) {\n    if (!data.viewer) {\n      window.location.href += \"users/sign_up\";\n    } else {\n      vote({\n        variables: {\n          postId: postId\n        }\n      });\n    }\n  };\n\n  console.log(data);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, data.postsAll.map(function (post) {\n    return /*#__PURE__*/React.createElement(\"article\", {\n      className: \"post\",\n      key: post.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/posts/\".concat(post.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, post.title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"url\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: post.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, post.url)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tagline\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, post.tagline), /*#__PURE__*/React.createElement(\"footer\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleUpvote.bind(_this, post.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, post.isVoted ? \"ðŸ”½\" : \"ðŸ”¼\", \" \", post.votesCount, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, \"\\uD83D\\uDCAC \", post.commentsCount)));\n  }));\n}\n\nrenderComponent(PostsIndex);","map":{"version":3,"sources":["/Users/Rustam_Mukhamedov/Downloads/kittynews_frontend/app/javascript/packs/posts-index/posts-index.jsx"],"names":["React","useQuery","useMutation","renderComponent","getAllPostsQuery","voteForPostMutation","PostsIndex","data","loading","error","vote","message","handleUpvote","postId","viewer","window","location","href","variables","console","log","postsAll","map","post","id","title","url","tagline","bind","isVoted","votesCount","commentsCount"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,cAAtC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,SAASC,mBAAT,QAAoC,yBAApC;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAAA,kBACaL,QAAQ,CAACG,gBAAD,CADrB;AAAA,MACZG,IADY,aACZA,IADY;AAAA,MACNC,OADM,aACNA,OADM;AAAA,MACGC,KADH,aACGA,KADH;;AAAA,qBAELP,WAAW,CAACG,mBAAD,CAFN;AAAA;AAAA,MAEbK,IAFa;;AAIpB,MAAIF,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,wBAAiBA,KAAK,CAACE,OAAvB;;AAEX,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAAY;AAC/B,QAAG,CAACN,IAAI,CAACO,MAAT,EAAiB;AACfC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,IAAwB,eAAxB;AACD,KAFD,MAEO;AACLP,MAAAA,IAAI,CAAC;AAAEQ,QAAAA,SAAS,EAAE;AAAEL,UAAAA,MAAM,EAANA;AAAF;AAAb,OAAD,CAAJ;AACD;AACF,GAND;;AAQAM,EAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACc,QAAL,CAAcC,GAAd,CAAkB,UAACC,IAAD;AAAA,wBACjB;AAAS,MAAA,SAAS,EAAC,MAAnB;AAA0B,MAAA,GAAG,EAAEA,IAAI,CAACC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,IAAI,mBAAYD,IAAI,CAACC,EAAjB,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BD,IAAI,CAACE,KAApC,CADF,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,IAAI,EAAEF,IAAI,CAACG,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBH,IAAI,CAACG,GAAzB,CADF,CAJF,eAOE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BH,IAAI,CAACI,OAA/B,CAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAEf,YAAY,CAACgB,IAAb,CAAkB,KAAlB,EAAwBL,IAAI,CAACC,EAA7B,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoDD,IAAI,CAACM,OAAL,GAAe,IAAf,GAAsB,IAA1E,OAAiFN,IAAI,CAACO,UAAtF,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAYP,IAAI,CAACQ,aAAjB,CAFF,CARF,CADiB;AAAA,GAAlB,CADH,CADF;AAmBD;;AAED5B,eAAe,CAACG,UAAD,CAAf","sourcesContent":["import * as React from 'react';\nimport { useQuery, useMutation } from 'react-apollo';\nimport renderComponent from '../utils/renderComponent';\nimport { getAllPostsQuery } from './queries/getAllPosts';\nimport { voteForPostMutation } from './mutations/voteForPost';\n\nfunction PostsIndex() {\n  const { data, loading, error } = useQuery(getAllPostsQuery);\n  const [vote] = useMutation(voteForPostMutation);\n  \n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n\n  const handleUpvote = (postId) => {\n    if(!data.viewer) {\n      window.location.href += \"users/sign_up\";\n    } else {\n      vote({ variables: { postId }});\n    }\n  }\n\n  console.log(data)\n\n  return (\n    <div className=\"box\">\n      {data.postsAll.map((post) => (\n        <article className=\"post\" key={post.id}>\n          <h2>\n            <a href={`/posts/${post.id}`}>{post.title}</a>\n          </h2>\n          <div className=\"url\">\n            <a href={post.url}>{post.url}</a>\n          </div>\n          <div className=\"tagline\">{post.tagline}</div>\n          <footer>\n            <button onClick={handleUpvote.bind(this, post.id)}>{post.isVoted ? \"ðŸ”½\" : \"ðŸ”¼\"} {post.votesCount} </button>\n            <button>ðŸ’¬ {post.commentsCount}</button>\n          </footer>\n        </article>\n      ))}\n    </div>\n  );\n}\n\nrenderComponent(PostsIndex);\n"]},"metadata":{},"sourceType":"module"}