{"ast":null,"code":"var _jsxFileName = \"/Users/Rustam_Mukhamedov/Downloads/kittynews_frontend/app/javascript/packs/posts-index/posts-index.jsx\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useEffect, useCallback } from 'react';\nimport { useQuery, useMutation } from 'react-apollo';\nimport renderComponent from '../utils/renderComponent';\nimport { getAllPostsQuery } from './queries/getAllPosts';\nimport { voteForPostMutation } from './mutations/voteForPost';\nimport { unVoteForPostMutation } from './mutations/unVoteForPost';\nimport Post from './components/Post';\n\nfunction PostsIndex() {\n  var _this = this;\n\n  var _useQuery = useQuery(getAllPostsQuery, {\n    fetchPolicy: \"no-cache\"\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      refetch = _useQuery.refetch;\n\n  var _useMutation = useMutation(voteForPostMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      vote = _useMutation2[0],\n      c = _useMutation2[1];\n\n  var _useMutation3 = useMutation(unVoteForPostMutation),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      unVote = _useMutation4[0];\n\n  useEffect(function () {\n    console.log('c');\n  }, []);\n  if (loading) return 'Loading...';\n  if (error) return \"Error! \".concat(error.message);\n\n  var handleUpvote = function handleUpvote(post) {\n    if (!data.viewer) {\n      window.location.href += \"users/sign_up\";\n    } else if (post.isVoted) {\n      unVote({\n        variables: {\n          postId: post.id\n        }\n      });\n    } else {\n      vote({\n        variables: {\n          postId: post.id\n        }\n      });\n    }\n  };\n\n  console.log(c);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, data.postsAll.map(function (post) {\n    return /*#__PURE__*/React.createElement(Post, {\n      key: post.id,\n      post: post,\n      onUpvote: handleUpvote,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 36\n      }\n    });\n  }));\n}\n\nrenderComponent(PostsIndex);","map":{"version":3,"sources":["/Users/Rustam_Mukhamedov/Downloads/kittynews_frontend/app/javascript/packs/posts-index/posts-index.jsx"],"names":["React","useEffect","useCallback","useQuery","useMutation","renderComponent","getAllPostsQuery","voteForPostMutation","unVoteForPostMutation","Post","PostsIndex","fetchPolicy","data","loading","error","refetch","vote","c","unVote","console","log","message","handleUpvote","post","viewer","window","location","href","isVoted","variables","postId","id","postsAll","map"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,cAAtC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,SAASC,mBAAT,QAAoC,yBAApC;AACA,SAASC,qBAAT,QAAsC,2BAAtC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAAA,kBACsBP,QAAQ,CAACG,gBAAD,EAAmB;AAAEK,IAAAA,WAAW,EAAE;AAAf,GAAnB,CAD9B;AAAA,MACZC,IADY,aACZA,IADY;AAAA,MACNC,OADM,aACNA,OADM;AAAA,MACGC,KADH,aACGA,KADH;AAAA,MACUC,OADV,aACUA,OADV;;AAAA,qBAEFX,WAAW,CAACG,mBAAD,CAFT;AAAA;AAAA,MAEbS,IAFa;AAAA,MAEPC,CAFO;;AAAA,sBAGHb,WAAW,CAACI,qBAAD,CAHR;AAAA;AAAA,MAGbU,MAHa;;AAKpBjB,EAAAA,SAAS,CAAC,YAAM;AACdkB,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD,GAFQ,EAEP,EAFO,CAAT;AAIA,MAAIP,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,wBAAiBA,KAAK,CAACO,OAAvB;;AAEX,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAC7B,QAAG,CAACX,IAAI,CAACY,MAAT,EAAiB;AACfC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,IAAwB,eAAxB;AACD,KAFD,MAEO,IAAGJ,IAAI,CAACK,OAAR,EAAiB;AACtBV,MAAAA,MAAM,CAAC;AAAEW,QAAAA,SAAS,EAAE;AAAEC,UAAAA,MAAM,EAAEP,IAAI,CAACQ;AAAf;AAAb,OAAD,CAAN;AACD,KAFM,MAEA;AACLf,MAAAA,IAAI,CAAC;AAAEa,QAAAA,SAAS,EAAE;AAAEC,UAAAA,MAAM,EAAEP,IAAI,CAACQ;AAAf;AAAb,OAAD,CAAJ;AACD;AACF,GARD;;AAUAZ,EAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,CAACoB,QAAL,CAAcC,GAAd,CAAkB,UAACV,IAAD;AAAA,wBAAU,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACQ,EAAhB;AAAoB,MAAA,IAAI,EAAER,IAA1B;AAAgC,MAAA,QAAQ,EAAED,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AAAA,GAAlB,CADH,CADF;AAKD;;AAEDjB,eAAe,CAACK,UAAD,CAAf","sourcesContent":["import React, { useEffect, useCallback } from 'react';\nimport { useQuery, useMutation } from 'react-apollo';\nimport renderComponent from '../utils/renderComponent';\nimport { getAllPostsQuery } from './queries/getAllPosts';\nimport { voteForPostMutation } from './mutations/voteForPost';\nimport { unVoteForPostMutation } from './mutations/unVoteForPost';\nimport Post from './components/Post';\n\nfunction PostsIndex() {\n  const { data, loading, error, refetch } = useQuery(getAllPostsQuery, { fetchPolicy: \"no-cache\" });\n  const [vote, c] = useMutation(voteForPostMutation);\n  const [unVote] = useMutation(unVoteForPostMutation);\n  \n  useEffect(() => {\n    console.log('c')\n  },[]);\n  \n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n\n  const handleUpvote = (post) => {\n    if(!data.viewer) {\n      window.location.href += \"users/sign_up\";\n    } else if(post.isVoted) {\n      unVote({ variables: { postId: post.id }})\n    } else {\n      vote({ variables: { postId: post.id }});\n    }\n  };\n\n  console.log(c);\n\n  return (\n    <div className=\"box\">\n      {data.postsAll.map((post) => <Post key={post.id} post={post} onUpvote={handleUpvote} /> )}\n    </div>\n  );\n}\n\nrenderComponent(PostsIndex);\n"]},"metadata":{},"sourceType":"module"}